/*
 * This file is generated by jOOQ.
 */
package cn.tuyucheng.taketoday.jooq.jointables.public_;


import cn.tuyucheng.taketoday.jooq.jointables.public_.tables.Book;
import cn.tuyucheng.taketoday.jooq.jointables.public_.tables.Bookauthor;
import cn.tuyucheng.taketoday.jooq.jointables.public_.tables.Store;
import cn.tuyucheng.taketoday.jooq.jointables.public_.tables.records.BookRecord;
import cn.tuyucheng.taketoday.jooq.jointables.public_.tables.records.BookauthorRecord;
import cn.tuyucheng.taketoday.jooq.jointables.public_.tables.records.StoreRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class Keys {

   // -------------------------------------------------------------------------
   // UNIQUE and PRIMARY KEY definitions
   // -------------------------------------------------------------------------

   public static final UniqueKey<BookRecord> BOOK_PKEY = Internal.createUniqueKey(Book.BOOK, DSL.name("Book_pkey"), new TableField[]{Book.BOOK.ID}, true);
   public static final UniqueKey<BookauthorRecord> AUTHOR_PKEY = Internal.createUniqueKey(Bookauthor.BOOKAUTHOR, DSL.name("Author_pkey"), new TableField[]{Bookauthor.BOOKAUTHOR.ID}, true);
   public static final UniqueKey<StoreRecord> STORE_PKEY = Internal.createUniqueKey(Store.STORE, DSL.name("Store_pkey"), new TableField[]{Store.STORE.ID}, true);
}
